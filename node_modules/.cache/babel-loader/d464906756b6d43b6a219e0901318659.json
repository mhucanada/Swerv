{"ast":null,"code":"var _jsxFileName = \"/home/mhucanada/Projects/deltahacks-master/src/components/Result.js\";\nimport React from \"react\";\nimport cold from \"./cold.png\";\nimport hot from \"./hot.png\";\n\nvar mqtt = require('mqtt');\n\nvar client = mqtt.connect('mqtt://test.mosquitto.org');\nclient.subscribe(\"test/temp\");\nconst images = [cold, hot];\nconst temperatures = [29, 31];\nconst testTemp = 31;\nvar imageSource = \"\";\nvar power = true;\nvar waterSaved = 0;\nvar flowRate = 30;\n\nfunction whichImage() {\n  imageSource = images[0];\n\n  while (testTemp > 30) {\n    function myFunction() {\n      setInterval(myTimer, 1000);\n    }\n\n    myFunction();\n\n    function myTimer() {\n      waterSaved += flowRate;\n      document.getElementById(\"demo\").innerHTML = waterSaved;\n    }\n\n    ;\n    imageSource = images[1];\n    return imageSource;\n  }\n\n  ;\n\n  window.onload = function savedWater() {\n    document.getElementById(\"demo\").innerHTML = waterSaved;\n  };\n\n  return imageSource;\n}\n\n;\nconst chooseImage = whichImage();\n\nconst Result = props => React.createElement(\"div\", {\n  className: \"result\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}), React.createElement(\"p\", {\n  className: \"pad\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, \"Current state:\"), React.createElement(\"img\", {\n  src: cold,\n  height: \"480\",\n  width: \"630\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}), props.saved && React.createElement(\"p\", {\n  className: \"result__key\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, \"The flow rate is currently at:\", React.createElement(\"span\", {\n  className: \"result__value\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \" \", props.saved), \" L/s\"), props.error && React.createElement(\"p\", {\n  className: \"result__key\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, \"Error:\", React.createElement(\"span\", {\n  className: \"result__value\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, \" \", props.error)), React.createElement(\"p\", {\n  id: \"demo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}));\n\nexport default Result;","map":{"version":3,"sources":["/home/mhucanada/Projects/deltahacks-master/src/components/Result.js"],"names":["React","cold","hot","mqtt","require","client","connect","subscribe","images","temperatures","testTemp","imageSource","power","waterSaved","flowRate","whichImage","myFunction","setInterval","myTimer","document","getElementById","innerHTML","window","onload","savedWater","chooseImage","Result","props","saved","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,GAAP,MAAgB,WAAhB;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGF,IAAI,CAACG,OAAL,CAAa,2BAAb,CAAb;AACAD,MAAM,CAACE,SAAP,CAAiB,WAAjB;AAKA,MAAMC,MAAM,GAAG,CACXP,IADW,EAEXC,GAFW,CAAf;AAKA,MAAMO,YAAY,GAAG,CACjB,EADiB,EAEjB,EAFiB,CAArB;AAKA,MAAMC,QAAQ,GAAG,EAAjB;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,KAAK,GAAG,IAAZ;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,QAAQ,GAAG,EAAf;;AAEA,SAASC,UAAT,GAAsB;AAClBJ,EAAAA,WAAW,GAAGH,MAAM,CAAC,CAAD,CAApB;;AACA,SAAOE,QAAQ,GAAG,EAAlB,EAAsB;AAClB,aAASM,UAAT,GAAsB;AAClBC,MAAAA,WAAW,CAACC,OAAD,EAAU,IAAV,CAAX;AACH;;AACDF,IAAAA,UAAU;;AACV,aAASE,OAAT,GAAmB;AACfL,MAAAA,UAAU,IAAIC,QAAd;AACAK,MAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4CR,UAA5C;AACH;;AAAA;AACDF,IAAAA,WAAW,GAAGH,MAAM,CAAC,CAAD,CAApB;AACA,WAAOG,WAAP;AACH;;AAAA;;AACDW,EAAAA,MAAM,CAACC,MAAP,GAAgB,SAASC,UAAT,GAAqB;AACrCL,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4CR,UAA5C;AACC,GAFD;;AAIA,SAAOF,WAAP;AACH;;AAAA;AAED,MAAMc,WAAW,GAAGV,UAAU,EAA9B;;AAGA,MAAMW,MAAM,GAAGC,KAAK,IAChB;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAG,EAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAK,EAAA,GAAG,EAAE1B,IAAV;AAAgB,EAAA,MAAM,EAAC,KAAvB;AAA6B,EAAA,KAAK,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,EAKK0B,KAAK,CAACC,KAAN,IACD;AAAG,EAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACI;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAkCD,KAAK,CAACC,KAAxC,CADJ,SANJ,EASKD,KAAK,CAACE,KAAN,IACD;AAAG,EAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAkCF,KAAK,CAACE,KAAxC,CADJ,CAVJ,EAaI;AAAG,EAAA,EAAE,EAAC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAbJ,CADJ;;AAmBA,eAAeH,MAAf","sourcesContent":["import React from \"react\";\nimport cold from \"./cold.png\";\nimport hot from \"./hot.png\";\n\nvar mqtt = require('mqtt');\nvar client = mqtt.connect('mqtt://test.mosquitto.org');\nclient.subscribe(\"test/temp\")\n\n\n\n\nconst images = [\n    cold,\n    hot,\n]\n\nconst temperatures = [\n    29,\n    31,\n]\n\nconst testTemp = 31;\nvar imageSource = \"\";\nvar power = true;\nvar waterSaved = 0;\nvar flowRate = 30;\n\nfunction whichImage() {\n    imageSource = images[0];\n    while (testTemp > 30) {\n        function myFunction() { \n            setInterval(myTimer, 1000);\n        }\n        myFunction();\n        function myTimer() {\n            waterSaved += flowRate;\n            document.getElementById(\"demo\").innerHTML = waterSaved\n        };\n        imageSource = images[1];\n        return imageSource;\n    };\n    window.onload = function savedWater(){\n    document.getElementById(\"demo\").innerHTML = waterSaved;\n    };\n\n    return imageSource;\n};\n\nconst chooseImage = whichImage();\n\n\nconst Result = props => (\n    <div className=\"result\">\n        <br></br> \n        <p className=\"pad\">Current state:</p>\n        <img src={cold} height=\"480\" width=\"630\"></img>\n        <br></br>\n        {props.saved && \n        <p className=\"result__key\">The flow rate is currently at:\n            <span className=\"result__value\"> {props.saved}</span> L/s\n        </p>}\n        {props.error && \n        <p className=\"result__key\">Error:\n            <span className=\"result__value\"> {props.error}</span>\n        </p>}\n        <p id=\"demo\"></p>\n    </div>\n);\n\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}